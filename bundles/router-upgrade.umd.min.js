/**
 * @license Angular v4.0.0-rc.2-5ad5301
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 */
!function(global,factory){if("function"==typeof define&&define.amd)define("@angular/router/upgrade",["exports","@angular/core","@angular/router","@angular/upgrade/static"],factory);else if("undefined"!=typeof exports)factory(exports,require("@angular/core"),require("@angular/router"),require("@angular/upgrade/static"));else{var mod={exports:{}};factory(mod.exports,global.ng.core,global.ng.router,global.ng.upgrade.static),global.ng=global.ng||{},global.ng.router=global.ng.router||{},global.ng.router.upgrade=mod.exports}}(this,function(exports,_core,_router,_static){"use strict";function locationSyncBootstrapListener(ngUpgrade){return function(){setUpLocationSync(ngUpgrade)}}function setUpLocationSync(ngUpgrade){if(!ngUpgrade.$injector)throw new Error("\n        RouterUpgradeInitializer can be used only after UpgradeModule.bootstrap has been called.\n        Remove RouterUpgradeInitializer and call setUpLocationSync after UpgradeModule.bootstrap.\n      ");var router=ngUpgrade.injector.get(_router.Router),url=document.createElement("a");ngUpgrade.$injector.get("$rootScope").$on("$locationChangeStart",function(_,next,__){url.href=next,router.navigateByUrl(url.pathname)})}Object.defineProperty(exports,"__esModule",{value:!0}),exports.setUpLocationSync=exports.locationSyncBootstrapListener=exports.RouterUpgradeInitializer=void 0;var RouterUpgradeInitializer={provide:_core.APP_BOOTSTRAP_LISTENER,multi:!0,useFactory:locationSyncBootstrapListener,deps:[_static.UpgradeModule]};exports.RouterUpgradeInitializer=RouterUpgradeInitializer,exports.locationSyncBootstrapListener=locationSyncBootstrapListener,exports.setUpLocationSync=setUpLocationSync});