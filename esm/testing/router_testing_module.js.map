{"version":3,"file":"router_testing_module.js","sourceRoot":"","sources":["../../../../../modules/@angular/router/testing/router_testing_module.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,QAAQ,EAAE,gBAAgB,EAAC,MAAM,iBAAiB;OACnD,EAAC,oBAAoB,EAAE,WAAW,EAAC,MAAM,yBAAyB;OAClE,EAAC,SAAS,EAAoB,sBAAsB,EAAE,QAAQ,EAAE,iBAAiB,EAAE,UAAU,EAAE,QAAQ,EAAC,MAAM,eAAe;OAE7H,EAAC,MAAM,EAAE,eAAe,EAAU,aAAa,EAAC,MAAM,UAAU;OAChE,EAAC,MAAM,EAAC,MAAM,6BAA6B;OAC3C,EAAC,iBAAiB,EAAE,gBAAgB,EAAC,MAAM,sBAAsB;AACxE;IAGE,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QAF/B,mBAAc,GAA0B,EAAE,CAAC;IAET,CAAC;IAE1C,IAAI,CAAC,IAAY;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QACxE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAM,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,sBAAsB,IAAI,EAAE,CAAC,CAAC,CAAC;QACtE,CAAC;IACH,CAAC;AASH,CAAC;AARD,kBAAkB;AACX,oCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,wCAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,QAAQ,GAAG;CACjB,CACA;AAED,4BACI,QAA2B,EAAE,aAA4B,EAAE,SAA0B,EACrF,QAAkB,EAAE,MAA8B,EAAE,QAAkB,EAAE,MAAc;IACxF,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAClG,CAAC;AACD;AAqBA,CAAC;AApBD,kBAAkB;AACX,8BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,UAAU,EAAE,iBAAiB;gBAC7B,SAAS,EAAE;oBACT,gBAAgB;oBAChB,EAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAC;oBAC1C,EAAC,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,oBAAoB,EAAC;oBAC3D,EAAC,OAAO,EAAE,sBAAsB,EAAE,QAAQ,EAAE,yBAAyB,EAAC;oBACtE;wBACE,OAAO,EAAE,MAAM;wBACf,UAAU,EAAE,kBAAkB;wBAC9B,IAAI,EAAE;4BACJ,iBAAiB,EAAE,aAAa,EAAE,eAAe,EAAE,QAAQ,EAAE,sBAAsB;4BACnF,QAAQ,EAAE,MAAM;yBACjB;qBACF;iBACF;aACF,EAAG,EAAE;CACL,CACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy} from '@angular/common';\nimport {MockLocationStrategy, SpyLocation} from '@angular/common/testing';\nimport {AppModule, AppModuleFactory, AppModuleFactoryLoader, Compiler, ComponentResolver, Injectable, Injector} from '@angular/core';\n\nimport {Router, RouterOutletMap, Routes, UrlSerializer} from '../index';\nimport {ROUTES} from '../src/router_config_loader';\nimport {ROUTER_DIRECTIVES, ROUTER_PROVIDERS} from '../src/router_module';\nexport class SpyAppModuleFactoryLoader implements AppModuleFactoryLoader {\n  public stubbedModules: {[path: string]: any} = {};\n\n  constructor(private compiler: Compiler) {}\n\n  load(path: string): Promise<AppModuleFactory<any>> {\n    if (this.stubbedModules[path]) {\n      return this.compiler.compileAppModuleAsync(this.stubbedModules[path]);\n    } else {\n      return <any>Promise.reject(new Error(`Cannot find module ${path}`));\n    }\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Compiler, },\n];\n}\n\nfunction setupTestingRouter(\n    resolver: ComponentResolver, urlSerializer: UrlSerializer, outletMap: RouterOutletMap,\n    location: Location, loader: AppModuleFactoryLoader, injector: Injector, routes: Routes) {\n  return new Router(null, resolver, urlSerializer, outletMap, location, injector, loader, routes);\n}\nexport class RouterTestingModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: AppModule, args: [{\n  directives: ROUTER_DIRECTIVES,\n  providers: [\n    ROUTER_PROVIDERS,\n    {provide: Location, useClass: SpyLocation},\n    {provide: LocationStrategy, useClass: MockLocationStrategy},\n    {provide: AppModuleFactoryLoader, useClass: SpyAppModuleFactoryLoader},\n    {\n      provide: Router,\n      useFactory: setupTestingRouter,\n      deps: [\n        ComponentResolver, UrlSerializer, RouterOutletMap, Location, AppModuleFactoryLoader,\n        Injector, ROUTES\n      ]\n    },\n  ]\n}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}